# .github/workflows/deploy.yml
name: Deploy Todoist Reminder to AWS

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
  schedule:
    - cron: '0 7 * * *'  # Runs daily at 7 AM UTC
  workflow_dispatch:  # Manual trigger

env:
  PYTHON_VERSION: '3.9'
  AWS_REGION: ${{ secrets.AWS_REGION }}
  STACK_NAME: todoist-reminder

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install aws-sam-cli

      - name: Deploy with SAM
        run: |
          sam build
          sam deploy \
            --stack-name ${{ env.STACK_NAME }} \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              TodoistApiKey=${{ secrets.TODOIST_API_KEY }} \
              SenderEmail=${{ secrets.SENDER_EMAIL }} \
              RecipientEmail=${{ secrets.RECIPIENT_EMAIL }}

      - name: Verify Lambda function
        run: |
          # Wait for deployment to complete
          aws cloudformation wait stack-update-complete --stack-name ${{ env.STACK_NAME }} || \
          aws cloudformation wait stack-create-complete --stack-name ${{ env.STACK_NAME }}
          
          echo "Deployment completed successfully!"